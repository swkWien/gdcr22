<!-- TODO check with Adam if his session is refactoring only or not? -->

# Allowing for Change / Decoupling with SOLID

Focus: Improve class design
Strategy: Apply SOLID principles

Facilitator: Claus Aichinger

---

## Focus

* ...

---

::: {.panel-tabset}

## S

The Single Responsibility Principle (SRP)

> A class should have one, and only one, reason to change.

<!-- TODO different formulation -->

## O

The Open Closed Principle (OCP)

> You should be able to extend a classes behavior, without modifying it.

## L

The Liskov Substitution Principle (LSP)

> Derived classes must be substitutable for their base classes.

## I

The Interface Segregation Principle (ISP)

> Make fine grained interfaces that are client specific.

## D? 🤔

The Dependency Inversion Principle (DIP)

> Depend on abstractions, not on concretions.
:::

---

## Bar

You can use unicode emojis 👍 or fontawesome {{< fa thumbs-up >}} if you prefer that.

---

## Baz

---

{{< include ../_pairing.qmd >}}

---

{{< include ../_learning_and_practicing.qmd >}}

---

{{< include ../_retrospective.qmd >}}

* Question A
* Question B

---

{{< include ../_short_break.qmd >}}